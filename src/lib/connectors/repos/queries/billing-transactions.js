/**
 * Finds transactions from past sent batches relating to licences in the
 * current supplementary batch.
 * This cannot be done on charge version alone as there may be historical transactions
 * generated by charge versions that are not in the current batch. Therefore the UNION
 * sub query to pull out transactions for licences with non chargeable charge versions
 * that might not have an invoice or invoice licencce record in the batch.
 */
exports.findHistoryByBatchId = `
select t.*, t.licence_id, t.financial_year_ending
from water.billing_batches b 
join water.licences l on b.region_id=l.region_id and l.include_in_supplementary_billing='yes'
join (
  select t.*, il.licence_id, il.licence_ref, i.invoice_account_number, i.invoice_account_id, i.financial_year_ending, 
  b.billing_batch_id, b.is_summer, i.rebilling_state
  from water.billing_transactions t
  join water.billing_invoice_licences il on t.billing_invoice_licence_id=il.billing_invoice_licence_id
  join water.billing_invoices i on il.billing_invoice_id=i.billing_invoice_id
  join water.billing_batches b on i.billing_batch_id=b.billing_batch_id
  where 
    b.billing_batch_id<>:batchId
    and t.is_credited_back = false
    and t.source_transaction_id is null
    and b.status='sent'
    and i.is_de_minimis=false
) t on t.licence_id=l.licence_id and t.financial_year_ending>= b.from_financial_year_ending and t.financial_year_ending<=b.to_financial_year_ending
where b.billing_batch_id=:batchId
and l.licence_id not in (
  select cvw.licence_id 
  from water.charge_version_workflows cvw
  where cvw.date_deleted is null
)
and t.licence_ref IN (
  select licence_ref from water.billing_invoice_licences il join water.billing_invoices i ON il.billing_invoice_id = i.billing_invoice_id
  join water.billing_batches b ON i.billing_batch_id = b.billing_batch_id where b.billing_batch_id=:batchId
  UNION
    select licence_ref from water.charge_versions cv join 
        water.billing_batch_charge_version_years bbcvy on bbcvy.charge_version_id=cv.charge_version_id
    where bbcvy.billing_batch_id=:batchId
      )
order by t.date_created asc
`;

exports.findByBatchId = `
select t.*, il.licence_id, il.licence_ref, i.invoice_account_number, i.financial_year_ending, i.invoice_account_id, 
i.invoice_account_number, b.billing_batch_id, b.is_summer, i.rebilling_state
from water.billing_transactions t
join water.billing_invoice_licences il on t.billing_invoice_licence_id=il.billing_invoice_licence_id
join water.billing_invoices i on il.billing_invoice_id=i.billing_invoice_id
join water.billing_batches b on i.billing_batch_id=b.billing_batch_id
where b.billing_batch_id=:batchId;
`;

exports.findStatusCountsByBatchId = `
select t.status, count(t.status)
  from water.billing_batches b
  join water.billing_invoices i on b.billing_batch_id=i.billing_batch_id
  join water.billing_invoice_licences il on i.billing_invoice_id=il.billing_invoice_id
  join water.billing_transactions t on t.billing_invoice_licence_id=il.billing_invoice_licence_id
  where b.billing_batch_id=:batchId
  group by t.status;
`;

exports.deleteByBatchId = `
  delete
  from water.billing_transactions tx
  using water.billing_invoice_licences il, water.billing_invoices i
  where il.billing_invoice_licence_id = tx.billing_invoice_licence_id
  and i.billing_invoice_id = il.billing_invoice_id
  and i.billing_batch_id = :batchId;
`;

exports.deleteByInvoiceId = `
delete from water.billing_transactions t
  using water.billing_invoice_licences l
  where 
    t.billing_invoice_licence_id=l.billing_invoice_licence_id 
    and l.billing_invoice_id=:billingInvoiceId
`;

exports.countByBatchId = `
  select count(t.billing_transaction_id) 
    from water.billing_transactions t
    join water.billing_invoice_licences il on t.billing_invoice_licence_id=il.billing_invoice_licence_id
    join water.billing_invoices i on il.billing_invoice_id=i.billing_invoice_id
    where i.billing_batch_id=:billingBatchId
`;

exports.updateIsCredited = `
update water.billing_transactions t1
set is_credited_back = true
where billing_transaction_id IN 
(select source_transaction_id
  from water.billing_transactions t2
  join water.billing_invoice_licences il on t2.billing_invoice_licence_id=il.billing_invoice_licence_id
    join water.billing_invoices i on il.billing_invoice_id=i.billing_invoice_id
    join water.billing_batches b on i.billing_batch_id = b.billing_batch_id
    where b.region_id=:regionId and t2.is_credit = true and t2.source_transaction_id is not null)
and t1.is_credited_back = false;
`;
